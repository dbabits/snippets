#!/bin/bash

#group by the hour and see distribution:
sqlite> select node, count(*),group_concat(datetime(ts,'unixepoch','localtime'),',') from consul_svc_handler where node in ('node1') GROUP BY (ts/(60*60));
node                   count(*)    group_concat(datetime(ts,'unixepoch','localtime'),',')
---------------------  ----------  ---------------------------------------------------------------------------------------------
node1                  5           2018-11-30 14:00:08,2018-11-30 14:00:16,2018-11-30 14:01:08,2018-11-30 14:01:16,2018-11-30 14:01:29
node1                  2           2018-11-30 16:00:26,2018-11-30 16:01:26

#convert milliseconds to hours/mins/secs: https://stackoverflow.com/a/15647770/1739713
> sqlite <<<"SELECT '120978=>' || (120978/1000/3600) || ' hours, ' || (120978/1000%3600/60) ||' minutes.';"
120978=>0 hours, 2 minutes.

#pivot 2:
cat <<EOF |  sqlite -separator ',' pivot.sqlite '.import /dev/stdin t'
id,counter,map,reduce,total
"job_1540515215370_2592","FILE_BYTES_READ",0,0,0
"job_1540515215370_2592","FILE_BYTES_WRITTEN",1138616773,268862,1138885635
"job_1540515215370_2592","HDFS_BYTES_READ",2642139400,0,2642139400
EOF


select
     id
    ,max(case when counter = 'FILE_BYTES_READ'    then total end) as FILE_BYTES_READ
    ,max(case when counter = 'FILE_BYTES_WRITTEN' then total end) as FILE_BYTES_WRITTEN
    ,max(case when counter = 'HDFS_BYTES_READ'    then total end) as HDFS_BYTES_READ
from t
group by id
;

#pivot rows to columns:
select col1,count(*),group_concat(col2,'|')
from T
group by col1

#select not null even if query returns nothing
"SELECT CASE WHEN COUNT(1) > 0 THEN IFNULL(c1,0) ELSE 0 END AS c1 FROM t1;"

Float division(note *1.0}:
SELECT ROUND((sum(t2.value-sum(t1.value)) *1.0/sum(t1.value)*100,2) as pct_diff
